% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_table_module.R
\name{model_table_module_server}
\alias{model_table_module_server}
\title{model table module server}
\usage{
model_table_module_server(
  input,
  output,
  session,
  data,
  model,
  scoring_funcs,
  selection = "multiple",
  show_policy = TRUE,
  pre_selected = selection == "multiple",
  editable = TRUE,
  response_show = TRUE,
  question_data
)
}
\arguments{
\item{input}{necessary input arg for shiny server function}

\item{output}{necessary output arg for shiny server function}

\item{session}{necessary session arg for shiny server function}

\item{data}{A reactive object that results in a data.frame/tibble, used to pass updates into the table}

\item{model}{The underlying bayesian network model, used for updating scores for model data}

\item{scoring_funcs}{A named list of scoring functions to translate user responses to probabilities}

\item{selection}{character, one of "multiple", "single", "none", how many items in the table should be allowed to be selected}

\item{show_policy}{logical, whether or not the scenarios should also be shown}

\item{pre_selected}{logical, if TRUE, pre-select the rows of the table}

\item{editable}{logical, can the names/comments be edited in the table}

\item{response_show}{logical, if TRUE allow the responses to a model be shown in a modal pop up on click of a button
within the table}

\item{question_data}{A list of the question data, for joining to responses in the modal pop up when showing responses}
}
\value{
A list of reactive objects to pass events back to the parent see details
}
\description{
Server side logic for dealing with events associated with the table displays of
model and policy data.
}
\details{
The returned object is a collection of reactive objects
\itemize{
\item selected - a reactive wrapper of a vector of integers, the rows of the table currently selected
\item data - a reactive wrapper for the contents of names/comments in the table to allow edits to be maintained
across all tabs.
}
}
